function mulfp (xy: (num, num)) : M[eps64_up]num {
  s = mul xy;
  rnd s
}

function addfp (xy: <num, num>) : M[eps64_up]num {
  s = add xy;
  rnd s
}

function divfp (xy: (num, num)) : M[eps64_up]num {
  s = div xy;
  rnd s
}

function sqrtfp (x: ![0.5]num) : M[eps64_up]num {
  s = sqrt x;
  rnd s
}

function MA (x : num) (y : num) (z : num) : M[4.441e-16]num {
  s = mulfp (x,y);
  let a = s;
  addfp (|a,z|)
}

function FMA (x : num) (y : num) (z : num) : M[eps64_up]num {
  a = mul (x,y);
  b = add (|a,z|);
  rnd b
}
