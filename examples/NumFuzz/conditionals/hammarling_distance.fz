#include "addfp.fz"
#include "divfp.fz"
#include "pow2.fz"

/*Interior conditional of the Hammarling alg for Euclidean length
    of a vector.
  Ref: "Numerical Methods in Scientific Computing, VOLUME 1".
        Dahlquist and Bjorck. Siam. 2008. page 119. 
*/

function hammarling 
        (x' : ![inf]num) (t' : ![inf]num) (s : num) {
    let [x] = x';
    let [t] = t';
    b = gt ([x{inf}],[t{inf}]); 
    if b then {
        s0 = divfp (t,x);
        let s1 = s0;
        s2 = pow2 [s1{2.0}];
        let s3 = s2;
        s4 = mulfp (s,s3);
        let s5 = s4;
        addfp (|1.0,s5|) 
    }
    else {
        s0 = divfp (t,x);
        let s1 = s0;
        s2 = pow2 [s1{2.0}];
        let s3 = s2;
        addfp (|s,s3|) 
    }
}

hammarling
