#include "fma.fz"
#include "fold101.fz"

function Horner100   
  (as : (num, (num, (num, (num, (num, (num, (num, (num, (num, 
  (num, (num, (num, (num, (num, (num, (num, (num, (num, (num, 
  (num, (num, (num, (num, (num, (num, (num, (num, (num, (num, 
  (num, (num, (num, (num, (num, (num, (num, (num, (num, (num, 
  (num, (num, (num, (num, (num , num, (num, (num, (num, (num, 
  (num, (num, (num, (num, (num, (num, (num, (num, (num, (num, 
  (num, (num, (num, (num, (num, (num, (num, (num, (num, (num, 
  (num, (num, (num, (num, (num, (num, (num, (num, (num, (num, 
  (num, (num, (num, (num, (num, (num, (num, (num, (num, (num, 
  (num, (num, (num, (num, (num , num, (num, (num, (num, (num, 
  (num,num)))))))))))))))))))))))))))))))))))))))))))))))))))
  ))))))))))))))))))))))))))))))))))))))))))))))))
  (x : ![100.0]num) 
{
  let [x'] = x;
  g = fun (a: num) {fun (b: num) {FMA b x' a}};
  fold101 as [g{100.0}]
}

Horner100