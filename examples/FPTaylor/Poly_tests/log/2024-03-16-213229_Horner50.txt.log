Base path: /home/ak2485/Documents/research/FPTaylor
Config file: /home/ak2485/Documents/research/FPTaylor/default.cfg
Config file: ../config.cfg
default-rnd = rnd64
nlopt-cc = gcc -std=c99 -O3
opt-exact = true
develop = false
log-append-date = start
uncertainty = false
rel-error = true
opt-approx = false
proof-record = false
find-bounds = false
proof-dir = proofs
opt-f-abs-tol = 0.01
fail-on-exception = true
print-opt-lower-bounds = true
bb-compile = {base}/b_and_b/compile.sh {base} {input} {out}
z3-python-lib = 
opt-x-abs-tol = 0.01
export-error-bounds = 
opt-f-rel-tol = 0.01
export-options = 
opt-x-rel-tol = 0.0
rel-error-threshold = 0.0001
bb-alg = opt0
log-base-dir = log
intermediate-opt = false
z3-interval-bounds = true
opt-max-iters = 1000000
abs-error = false
z3-bin = 
maxima-simplification = false
print-hex-floats = true
debug = true
print-precision = 7
export-error-bounds-data = 
fp-power2-model = true
opt = auto
default-var-type = float64
verbosity = 0
ulp-error = false
opt-timeout = 10000
nlopt-lib = -lnlopt -lm
tmp-base-dir = tmp
unique-indices = false
z3-seed = 0
tmp-date = false
z3-python-cmd = python
const-approx-real-vars = false
print-second-order-errors = false
Resetting input_parser_env
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: (1/10)
result: 1/10
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: (1/10)
result: 1/10
Resetting input_parser_env
|tasks| = 1
Processing: Horner50

*************************************
Taylor form for: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10)) * x) + a9)) * x) + a8)) * x) + a7)) * x) + a6)) * x) + a5)) * x) + a4)) * x) + a3)) * x) + a2)) * x) + a1)) * x) + a0))

Conservative bound: [0.111111, 1001001001001027740716091191007791414970664420529936089388847486664268972402780556560205853411030944490417901420819700824298980397107905266540756504412160.000000]

Simplified rounding: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10)) * x) + a9)) * x) + a8)) * x) + a7)) * x) + a6)) * x) + a5)) * x) + a4)) * x) + a3)) * x) + a2)) * x) + a1)) * x) + a0))
Building Taylor forms...
var_form
var_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
mul_form
var_form
add_form
rounded_form
Taylor forms cache stats: num_bindings = 202, num_buckets = 1024, max_bucket_length = 2
Expr cache stats: num_bindings = 1718, num_buckets = 65536, max_bucket_length = 2
Simplifying Taylor forms...
success
v0 = ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) * x) + a10) * x) + a9) * x) + a8) * x) + a7) * x) + a6) * x) + a5) * x) + a4) * x) + a3) * x) + a2) * x) + a1) * x) + a0)
-1: exp = -53: (5641003929824499/14059105607947488696282932836518693308967803494693489478439861164411992439598399594747002144074658928593502845729752797260025831423419686528151609940203637047296)
1: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((a50 * x) + a49) + 0))))))))))))))))))))))))))))))))))))))))))))))))))))
2: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((a50 * x) + a49) * x) + a48) + interval(-1.16415321826934827688e-07, 1.16415321826934827688e-07))))))))))))))))))))))))))))))))))))))))))))))))))))
3: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((a50 * x) + a49) * x) + a48) * x) + a47) + interval(-2.35624611377716091558e-04, 2.35624611377716091558e-04)))))))))))))))))))))))))))))))))))))))))))))))))))
4: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) + interval(-3.57694923877716119964e-01, 3.57694923877716119964e-01))))))))))))))))))))))))))))))))))))))))))))))))))
5: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) + interval(-4.82694923877716121297e+02, 4.82694923877716121297e+02)))))))))))))))))))))))))))))))))))))))))))))))))
6: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) + interval(-6.10694923877716180868e+05, 6.10694923877716180868e+05))))))))))))))))))))))))))))))))))))))))))))))))
7: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) + interval(-7.41766923877716183662e+08, 7.41766923877716183662e+08)))))))))))))))))))))))))))))))))))))))))))))))
8: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) + interval(-8.75984651877716186523e+11, 8.75984651877716186523e+11))))))))))))))))))))))))))))))))))))))))))))))
9: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) + interval(-1.01342360534971612500e+15, 1.01342360534971612500e+15)))))))))))))))))))))))))))))))))))))))))))))
10: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) + interval(-1.15416109370504422400e+18, 1.15416109370504422400e+18))))))))))))))))))))))))))))))))))))))))))))
11: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) + interval(-1.29827628178090020045e+21, 1.29827628178090020045e+21)))))))))))))))))))))))))))))))))))))))))))
12: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) + interval(-1.44585023437057668048e+24, 1.44585023437057668048e+24))))))))))))))))))))))))))))))))))))))))))
13: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) + interval(-1.59696596182240528867e+27, 1.59696596182240528867e+27)))))))))))))))))))))))))))))))))))))))))
14: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) + interval(-1.75170846673307787581e+30, 1.75170846673307787581e+30))))))))))))))))))))))))))))))))))))))))
15: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) + interval(-1.91016479176160683472e+33, 1.91016479176160683472e+33)))))))))))))))))))))))))))))))))))))))
16: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) + interval(-2.07242406859082024192e+36, 2.07242406859082024192e+36))))))))))))))))))))))))))))))))))))))
17: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) + interval(-2.23857756806393499285e+39, 2.23857756806393499285e+39)))))))))))))))))))))))))))))))))))))
18: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) + interval(-2.40871875152440424634e+42, 2.40871875152440424634e+42))))))))))))))))))))))))))))))))))))
19: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) + interval(-2.58294332338792512835e+45, 2.58294332338792512835e+45)))))))))))))))))))))))))))))))))))
20: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) + interval(-2.76134928497617009066e+48, 2.76134928497617009066e+48))))))))))))))))))))))))))))))))))
21: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) + interval(-2.94403698964253323063e+51, 2.94403698964253323063e+51)))))))))))))))))))))))))))))))))
22: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) + interval(-3.13110919922088950865e+54, 3.13110919922088950865e+54))))))))))))))))))))))))))))))))
23: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) + interval(-3.32267114182912620940e+57, 3.32267114182912620940e+57)))))))))))))))))))))))))))))))
24: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) + interval(-3.51883057105995997212e+60, 3.51883057105995997212e+60))))))))))))))))))))))))))))))
25: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) + interval(-3.71969782659233439026e+63, 3.71969782659233439026e+63)))))))))))))))))))))))))))))
26: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) + interval(-3.92538589625748557229e+66, 3.92538589625748557229e+66))))))))))))))))))))))))))))
27: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) + interval(-4.13601047959460020908e+69, 4.13601047959460020908e+69)))))))))))))))))))))))))))
28: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) + interval(-4.35169005293180554199e+72, 4.35169005293180554199e+72))))))))))))))))))))))))))
29: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) + interval(-4.57254593602910417323e+75, 4.57254593602910417323e+75)))))))))))))))))))))))))
30: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) + interval(-4.68562414817492140025e+78, 4.68562414817492140025e+78))))))))))))))))))))))))
31: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) + interval(-4.80141623741223847766e+81, 4.80141623741223847766e+81)))))))))))))))))))))))
32: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) + interval(-4.91998733679125067965e+84, 4.91998733679125067965e+84))))))))))))))))))))))
33: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) + interval(-5.04140414255536020285e+87, 5.04140414255536020285e+87)))))))))))))))))))))
34: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) + interval(-5.16573495165780731571e+90, 5.16573495165780731571e+90))))))))))))))))))))
35: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) + interval(-5.29304970017871402047e+93, 5.29304970017871402047e+93)))))))))))))))))))
36: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) + interval(-5.42342000266412145606e+96, 5.42342000266412145606e+96))))))))))))))))))
37: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) + interval(-5.55691919240917911024e+99, 5.55691919240917911024e+99)))))))))))))))))
38: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) + interval(-5.69362236270811869207e+102, 5.69362236270811869207e+102))))))))))))))))
39: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) + interval(-5.83360640909423293527e+105, 5.83360640909423293527e+105)))))))))))))))
40: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) * x) + a10) + interval(-5.97695007259361251067e+108, 5.97695007259361251067e+108))))))))))))))
41: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) * x) + a10) * x) + a9) + interval(-6.12373398401697837234e+111, 6.12373398401697837234e+111)))))))))))))
42: exp = -53: (x * (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) * x) + a10) * x) + a9) * x) + a8) + interval(-6.27404070931450373310e+114, 6.27404070931450373310e+114))))))))))))
43: exp = -53: (x * (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) * x) + a10) * x) + a9) * x) + a8) * x) + a7) + interval(-6.42795479601917062117e+117, 6.42795479601917062117e+117)))))))))))
44: exp = -53: (x * (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) * x) + a10) * x) + a9) * x) + a8) * x) + a7) * x) + a6) + interval(-6.58556282080474951454e+120, 6.58556282080474951454e+120))))))))))
45: exp = -53: (x * (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) * x) + a10) * x) + a9) * x) + a8) * x) + a7) * x) + a6) * x) + a5) + interval(-6.74695343818518200779e+123, 6.74695343818518200779e+123)))))))))
46: exp = -53: (x * (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) * x) + a10) * x) + a9) * x) + a8) * x) + a7) * x) + a6) * x) + a5) * x) + a4) + interval(-6.91221743038274584848e+126, 6.91221743038274584848e+126))))))))
47: exp = -53: (x * (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) * x) + a10) * x) + a9) * x) + a8) * x) + a7) * x) + a6) * x) + a5) * x) + a4) * x) + a3) + interval(-7.08144775839305030748e+129, 7.08144775839305030748e+129)))))))
48: exp = -53: (x * (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) * x) + a10) * x) + a9) * x) + a8) * x) + a7) * x) + a6) * x) + a5) * x) + a4) * x) + a3) * x) + a2) + interval(-7.25473961427560164993e+132, 7.25473961427560164993e+132))))))
49: exp = -53: (x * (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) * x) + a10) * x) + a9) * x) + a8) * x) + a7) * x) + a6) * x) + a5) * x) + a4) * x) + a3) * x) + a2) * x) + a1) + interval(-7.43219047469933590911e+135, 7.43219047469933590911e+135)))))
50: exp = -53: (2 * floor_power2((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((a50 * x) + a49) * x) + a48) * x) + a47) * x) + a46) * x) + a45) * x) + a44) * x) + a43) * x) + a42) * x) + a41) * x) + a40) * x) + a39) * x) + a38) * x) + a37) * x) + a36) * x) + a35) * x) + a34) * x) + a33) * x) + a32) * x) + a31) * x) + a30) * x) + a29) * x) + a28) * x) + a27) * x) + a26) * x) + a25) * x) + a24) * x) + a23) * x) + a22) * x) + a21) * x) + a20) * x) + a19) * x) + a18) * x) + a17) * x) + a16) * x) + a15) * x) + a14) * x) + a13) * x) + a12) * x) + a11) * x) + a10) * x) + a9) * x) + a8) * x) + a7) * x) + a6) * x) + a5) * x) + a4) * x) + a3) * x) + a2) * x) + a1) * x) + a0) + interval(-7.61390015577323807589e+138, 7.61390015577323807589e+138))))

Corresponding original subexpressions:
1: rnd64_up(((a50 * x) + a49))
2: rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48))
3: rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47))
4: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46))
5: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45))
6: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44))
7: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43))
8: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42))
9: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41))
10: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40))
11: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39))
12: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38))
13: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37))
14: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36))
15: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35))
16: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34))
17: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33))
18: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32))
19: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31))
20: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30))
21: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29))
22: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28))
23: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27))
24: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26))
25: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25))
26: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24))
27: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23))
28: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22))
29: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21))
30: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20))
31: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19))
32: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18))
33: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17))
34: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16))
35: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15))
36: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14))
37: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13))
38: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12))
39: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11))
40: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10))
41: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10)) * x) + a9))
42: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10)) * x) + a9)) * x) + a8))
43: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10)) * x) + a9)) * x) + a8)) * x) + a7))
44: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10)) * x) + a9)) * x) + a8)) * x) + a7)) * x) + a6))
45: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10)) * x) + a9)) * x) + a8)) * x) + a7)) * x) + a6)) * x) + a5))
46: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10)) * x) + a9)) * x) + a8)) * x) + a7)) * x) + a6)) * x) + a5)) * x) + a4))
47: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10)) * x) + a9)) * x) + a8)) * x) + a7)) * x) + a6)) * x) + a5)) * x) + a4)) * x) + a3))
48: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10)) * x) + a9)) * x) + a8)) * x) + a7)) * x) + a6)) * x) + a5)) * x) + a4)) * x) + a3)) * x) + a2))
49: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10)) * x) + a9)) * x) + a8)) * x) + a7)) * x) + a6)) * x) + a5)) * x) + a4)) * x) + a3)) * x) + a2)) * x) + a1))
50: rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((rnd64_up(((a50 * x) + a49)) * x) + a48)) * x) + a47)) * x) + a46)) * x) + a45)) * x) + a44)) * x) + a43)) * x) + a42)) * x) + a41)) * x) + a40)) * x) + a39)) * x) + a38)) * x) + a37)) * x) + a36)) * x) + a35)) * x) + a34)) * x) + a33)) * x) + a32)) * x) + a31)) * x) + a30)) * x) + a29)) * x) + a28)) * x) + a27)) * x) + a26)) * x) + a25)) * x) + a24)) * x) + a23)) * x) + a22)) * x) + a21)) * x) + a20)) * x) + a19)) * x) + a18)) * x) + a17)) * x) + a16)) * x) + a15)) * x) + a14)) * x) + a13)) * x) + a12)) * x) + a11)) * x) + a10)) * x) + a9)) * x) + a8)) * x) + a7)) * x) + a6)) * x) + a5)) * x) + a4)) * x) + a3)) * x) + a2)) * x) + a1)) * x) + a0))

Selected optimization method: bb
bb_opt: x_abs_tol = 1.000000e-02, f_rel_tol = 1.000000e-02, f_abs_tol = 1.000000e-02, iters = 1000000
iterations(min = 0, max = 0): 0
min = 1.111111e-01 (lower_min = 1.111111e-01)
max = 1.001001e+153 (lower_max = 1.001001e+153)
subopt = 1.469959e+139 (0.0%)
bounds: [1.111111e-01, 1.001001e+153]

Computing relative errors
Selected optimization method: bb-eval
bb-eval_opt: x_abs_tol = 1.000000e-02, f_rel_tol = 1.000000e-02, f_abs_tol = 1.000000e-02, iters = 1000000
rmin(result = 4.012349e-145, lower = 4.012349e-145), rmax(result = 4.012349e-145, lower = 4.012349e-145)
-1: exp = -53: 4.012349e-145 (low = 4.012349e-145, subopt = 0.0%)

Solving the exact optimization problem
Selected optimization method: bb
bb_opt: x_abs_tol = 1.000000e-02, f_rel_tol = 1.000000e-02, f_abs_tol = 1.000000e-02, iters = 1000000
iterations(min = 0, max = 1000000): 1000000
min = 0.000000e+00 (lower_min = 0.000000e+00)
max = 6.323030e+155 (lower_max = 7.018564e+01)
subopt = 6.323030e+155 (100.0%)
exact bound-rel (exp = -53): 6.323030e+155 (low = 7.018564e+01, subopt = 100.0%)
total2: 4.009142e-160 (low = 4.450148e-314, subopt = 100.0%)
exact total-rel: 7.019974e+139 (low = 7.792171e-15, subopt = 100.0%)

Elapsed time: 358.09051
*************************************

-------------------------------------------------------------------------------
Problem: Horner50

Optimization lower bounds for error models:
The relative error (exact) model: 7.792170e-15 (0x1.18be1756eaa3p-47) (suboptimality = 100.0%)

Bounds (without rounding): [1.111111e-1, 1.001002e+153]

Relative error (exact): 7.019974e+139 (0x1.7946467ef0b8fp+464)

Elapsed time: 358.09

