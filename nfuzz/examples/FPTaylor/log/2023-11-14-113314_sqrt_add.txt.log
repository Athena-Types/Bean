Base path: /Users/arielkellison/FPTaylor
Config file: /Users/arielkellison/FPTaylor/default.cfg
Config file: /Users/arielkellison/FPTaylor/benchmarks/micro/config.cfg
default-rnd = rnd64
nlopt-cc = gcc -std=c99 -O3
opt-exact = true
develop = false
log-append-date = start
uncertainty = false
rel-error = false
opt-approx = true
proof-record = false
find-bounds = false
proof-dir = proofs
opt-f-abs-tol = 0.01
fail-on-exception = true
print-opt-lower-bounds = true
bb-compile = {base}/b_and_b/compile.sh {base} {input} {out}
z3-python-lib = 
opt-x-abs-tol = 0.01
export-error-bounds = 
opt-f-rel-tol = 0.01
export-options = 
opt-x-rel-tol = 0.0
rel-error-threshold = 0.0001
bb-alg = opt0
log-base-dir = log
intermediate-opt = false
z3-interval-bounds = true
opt-max-iters = 1000000
abs-error = true
z3-bin = 
maxima-simplification = false
print-hex-floats = true
debug = true
print-precision = 7
export-error-bounds-data = 
fp-power2-model = false
opt = auto
default-var-type = float64
verbosity = 2
ulp-error = false
opt-timeout = 10000
nlopt-lib = -lnlopt -lm
tmp-base-dir = tmp
unique-indices = false
z3-seed = 0
tmp-date = false
z3-python-cmd = python
const-approx-real-vars = true
print-second-order-errors = false
Resetting input_parser_env
eval_const_expr: 1
result: 1
eval_const_expr: 1000
result: 1000
eval_const_expr: 0
result: 0
eval_const_expr: 1000
result: 1000
eval_const_expr: 1
result: 1
Resetting input_parser_env
|tasks| = 1
Processing: sqrt_add

*************************************
Taylor form for: rnd64_up((rnd64_up(1) / rnd64_up((rnd64_up(sqrt(rnd64_up((rnd64_up(x) + rnd64_up(1))))) + rnd64_up(sqrt(rnd64_up(x)))))))

Conservative bound: [0.015807, 0.414214]

Simplified rounding: rnd64_up((1 / rnd[64,up,2.00,-53,0]((rnd[64,up,2.00,-53,0](sqrt(rnd[64,up,2.00,-53,0]((rnd64_up(x) + 1)))) + rnd[64,up,2.00,-53,0](sqrt(rnd64_up(x)))))))
Building Taylor forms...
const_form
var_rnd_form
add_form
rounded_form
sqrt_form
rounded_form
sqrt_form
rounded_form
add_form
rounded_form
div_form
inv_form
mul_form
rounded_form
Taylor forms cache stats: num_bindings = 12, num_buckets = 1024, max_bucket_length = 1
Expr cache stats: num_bindings = 52, num_buckets = 65536, max_bucket_length = 1
Simplifying Taylor forms...
success
v0 = (1 * (1 / (sqrt((x + 1)) + sqrt(x))))
-1: exp = -53: (2861107068431575/77371252455336267181195264)
1: exp = -53: (1 * (-(((((2 * 512) / (2 * sqrt((x + 1)))) + ((2 * 512) / (2 * sqrt(x)))) / ((sqrt((x + 1)) + sqrt(x)) * (sqrt((x + 1)) + sqrt(x)))))))
2: exp = -53: (1 * (-((((2 * (x + 1)) / (2 * sqrt((x + 1)))) / ((sqrt((x + 1)) + sqrt(x)) * (sqrt((x + 1)) + sqrt(x)))))))
3: exp = -53: (1 * (-(((2 * sqrt((x + 1))) / ((sqrt((x + 1)) + sqrt(x)) * (sqrt((x + 1)) + sqrt(x)))))))
4: exp = -53: (1 * (-(((2 * sqrt(x)) / ((sqrt((x + 1)) + sqrt(x)) * (sqrt((x + 1)) + sqrt(x)))))))
5: exp = -53: (1 * (-(((2 * (sqrt((x + 1)) + sqrt(x))) / ((sqrt((x + 1)) + sqrt(x)) * (sqrt((x + 1)) + sqrt(x)))))))
6: exp = -53: (2 * (1 * (1 / (sqrt((x + 1)) + sqrt(x)))))

Corresponding original subexpressions:
1: rnd64_up(x)
2: rnd[64,up,2.00,-53,0]((rnd64_up(x) + 1))
3: rnd[64,up,2.00,-53,0](sqrt(rnd[64,up,2.00,-53,0]((rnd64_up(x) + 1))))
4: rnd[64,up,2.00,-53,0](sqrt(rnd64_up(x)))
5: rnd[64,up,2.00,-53,0]((rnd[64,up,2.00,-53,0](sqrt(rnd[64,up,2.00,-53,0]((rnd64_up(x) + 1)))) + rnd[64,up,2.00,-53,0](sqrt(rnd64_up(x)))))
6: rnd64_up((1 / rnd[64,up,2.00,-53,0]((rnd[64,up,2.00,-53,0](sqrt(rnd[64,up,2.00,-53,0]((rnd64_up(x) + 1)))) + rnd[64,up,2.00,-53,0](sqrt(rnd64_up(x)))))))

bounds: [-inf, inf]

Computing absolute errors
Selected optimization method: bb-eval
bb-eval_opt: x_abs_tol = 1.000000e-02, f_rel_tol = 1.000000e-02, f_abs_tol = 1.000000e-02, iters = 1000000
rmin(result = 3.697894e-11, lower = 3.697894e-11), rmax(result = 3.697894e-11, lower = 3.697894e-11)
-1: exp = -53: 3.697894e-11 (low = 3.697894e-11, subopt = 0.0%)

Solving the approximate optimization problem

Absolute errors:
Selected optimization method: bb-eval
bb-eval_opt: x_abs_tol = 1.000000e-02, f_rel_tol = 1.000000e-02, f_abs_tol = 1.000000e-02, iters = 1000000
rmin(result = -1.499613e+02, lower = -1.499613e+02), rmax(result = -8.089364e-03, lower = -8.089364e-03)
1: exp = -53: 1.499613e+02 (low = 1.499613e+02, subopt = 0.0%)
Selected optimization method: bb-eval
bb-eval_opt: x_abs_tol = 1.000000e-02, f_rel_tol = 1.000000e-02, f_abs_tol = 1.000000e-02, iters = 1000000
rmin(result = -2.500381e-01, lower = -2.426407e-01), rmax(result = -1.579559e-05, lower = -7.905694e-03)
2: exp = -53: 2.500381e-01 (low = 2.426407e-01, subopt = 3.0%)
Selected optimization method: bb-eval
bb-eval_opt: x_abs_tol = 1.000000e-02, f_rel_tol = 1.000000e-02, f_abs_tol = 1.000000e-02, iters = 1000000
rmin(result = -4.998573e-01, lower = -4.852814e-01), rmax(result = -1.119150e-02, lower = -1.581139e-02)
3: exp = -53: 4.998573e-01 (low = 4.852814e-01, subopt = 2.9%)
Selected optimization method: bb-eval
bb-eval_opt: x_abs_tol = 1.000000e-02, f_rel_tol = 1.000000e-02, f_abs_tol = 1.000000e-02, iters = 1000000
rmin(result = -3.534525e-01, lower = -3.431458e-01), rmax(result = -1.118034e-02, lower = -1.580349e-02)
4: exp = -53: 3.534525e-01 (low = 3.431458e-01, subopt = 2.9%)
Selected optimization method: bb-eval
bb-eval_opt: x_abs_tol = 1.000000e-02, f_rel_tol = 1.000000e-02, f_abs_tol = 1.000000e-02, iters = 1000000
rmin(result = -8.460757e-01, lower = -8.284271e-01), rmax(result = -2.237184e-02, lower = -3.161487e-02)
5: exp = -53: 8.460757e-01 (low = 8.284271e-01, subopt = 2.1%)
Selected optimization method: bb-eval
bb-eval_opt: x_abs_tol = 1.000000e-02, f_rel_tol = 1.000000e-02, f_abs_tol = 1.000000e-02, iters = 1000000
rmin(result = 3.161487e-02, lower = 3.161487e-02), rmax(result = 8.284271e-01, lower = 8.284271e-01)
6: exp = -53: 8.284271e-01 (low = 8.284271e-01, subopt = 0.0%)
total1: 1.695746e-14 (low = 1.695191e-14, subopt = 0.0%)
total2: 4.105487e-27 (low = 4.105487e-27, subopt = 0.0%)
total: 1.695746e-14 (low = 1.695191e-14, subopt = 0.0%)

Solving the exact optimization problem
Selected optimization method: bb-eval
bb-eval_opt: x_abs_tol = 1.000000e-02, f_rel_tol = 1.000000e-02, f_abs_tol = 1.000000e-02, iters = 1000000
exact bound (exp = -53): 1.538123e+02 (low = 1.526893e+02, subopt = 0.7%)
total2: 4.105487e-27 (low = 4.105487e-27, subopt = 0.0%)
exact total: 1.707659e-14 (low = 1.695191e-14, subopt = 0.7%)

Elapsed time: 0.02167
*************************************

-------------------------------------------------------------------------------
Problem: sqrt_add

Optimization lower bounds for error models:
The absolute error (approximate) model: 1.695191e-14 (0x1.3160e56367fabp-46) (suboptimality = 0.0%)
The absolute error (exact) model:       1.695191e-14 (0x1.3160e56367fadp-46) (suboptimality = 0.7%)

Bounds (without rounding): [-inf, +inf]

Absolute error (approximate): 1.695746e-14 (0x1.317a75a1619ecp-46)
Absolute error (exact):       1.707660e-14 (0x1.339fe1f6ef427p-46)

Elapsed time: 0.02

